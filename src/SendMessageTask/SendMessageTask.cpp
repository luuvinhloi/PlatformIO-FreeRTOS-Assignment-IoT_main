#include "SendMessageTask.h"
#include "SensorTask/SensorTask.h"
#include "ConnectTask/ConnectTask.h"
#include "WeatherTask/WeatherTask.h"

// L∆∞u th·ªùi ƒëi·ªÉm g·ª≠i c·∫£nh b√°o g·∫ßn nh·∫•t
uint32_t lastAlertTime = 0;

// Bi·∫øn l∆∞u tr·∫°ng th√°i d·ª± b√°o m∆∞a tr∆∞·ªõc ƒë√≥
bool lastRainExpected = true;

// H√†m g·ª≠i tin nh·∫Øn c·∫£nh b√°o qua Telegram v√† in ra Serial
void sendTelegramMessage(String messageTelegram, String messageSerial, String imageUrl) {
    // In ra n·ªôi dung g·ª≠i
    Serial.println("--------- G·ª¨I C·∫¢NH B√ÅO ---------");
    Serial.println(messageSerial);
    Serial.println("--------------------------------");

    String url = "https://api.telegram.org/bot" + String(TELEGRAM_BOT_TOKEN) + 
                "/sendPhoto?chat_id=" + String(TELEGRAM_CHAT_ID) + 
                "&photo=" + imageUrl + 
                "&caption=" + messageTelegram;

    HTTPClient http;
    http.begin(url);
    int httpResponseCode = http.GET();

    if (httpResponseCode < 0) {
        Serial.print("L·ªói g·ª≠i tin nh·∫Øn Telegram: ");
        Serial.println(httpResponseCode);
    }
    http.end();
}

// H√†m b·ªï sung th√¥ng b√°o c·∫£nh b√°o v√†o hai chu·ªói: 1 cho Telegram, 1 cho Serial
void appendAlertMessage(String &msgTelegram, String &msgSerial, const String &text, bool &alertSent) {
    msgTelegram += text + " %0A";
    msgSerial += text + "\n";
    alertSent = true;
}

// H√†m ki·ªÉm tra v√† g·ª≠i c·∫£nh b√°o
void checkAndSendAlerts(float temperature, float humidity, bool rainStatus) {
    uint32_t currentMillis = millis();
    if (currentMillis - lastAlertTime < alertInterval) return;

    bool rainExpected = checkRainNext12Hours();
    bool alertSent = false;

    String msgTelegram = "üö® C·∫¢NH B√ÅO TH·ªúI TI·∫æT üö® %0A";
    String msgSerial = "C·∫¢NH B√ÅO TH·ªúI TI·∫æT\n";
    String imageURL = "http://rangdong.com.vn/uploads/news/tin-san-pham/nguoi-ban-4.0-cua-nha-nong/smart-farm-rang-dong-nguoi-ban-4.0-cua-nha-nong-5.jpg";

    std::vector<std::pair<String, bool>> conditions = {
        {"ƒê·ªô ·∫©m qu√° th·∫•p! ( " + String(humidity) + "%)", humidity < 30},
        {"ƒê·ªô ·∫©m qu√° cao! ( " + String(humidity) + "%)", humidity > 90},
        {"Nhi·ªát ƒë·ªô qu√° th·∫•p! ( " + String(temperature) + "¬∞C)", temperature < 20},
        {"Nhi·ªát ƒë·ªô qu√° cao! ( " + String(temperature) + "¬∞C)", temperature > 35},
        {"Th·ªùi ti·∫øt hi·ªán ƒëang m∆∞a!", rainStatus == LOW},
        {"Th·ªùi ti·∫øt hi·ªán kh√¥ng m∆∞a!", rainStatus == HIGH}
    };

    for (const auto &condition : conditions) {
        if (condition.second) {
            appendAlertMessage(msgTelegram, msgSerial, condition.first, alertSent);
        }
    }

    if (rainExpected != lastRainExpected) {
        String rainMessage = rainExpected ? "D·ª± b√°o C√≥ M∆∞a trong 12 gi·ªù t·ªõi" : "D·ª± b√°o Kh√¥ng c√≥ M∆∞a trong 12 gi·ªù t·ªõi";
        appendAlertMessage(msgTelegram, msgSerial, rainMessage, alertSent);
        lastRainExpected = rainExpected;
    }

    if (alertSent) {
        sendTelegramMessage(msgTelegram, msgSerial, imageURL);
        lastAlertTime = currentMillis;
    }
}